## Global code options
knitr::opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
# Especificamos las librerías necesarias en esta lista
packages = c("maps","ggmap","tidyverse","tmap","tmaptools")
#packages =  c("maps","ggmap","leaflet","rgdal","rgeos","maptools","tidyverse","tmap","formatR","tmaptools","devtools","caret")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE,repos='http://cran.rediris.es')
library(x, character.only = TRUE)
}
})
suppressPackageStartupMessages(library(ggmap))
#suppressPackageStartupMessages(library(rgdal))
#suppressPackageStartupMessages(library(rgeos))
suppressPackageStartupMessages(library(maptools))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(tmap))
library(maps)
maps::map('world', fill=TRUE, col='#ffA50077', border='black', bg='#00000011')
## Global code options
knitr::opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
# Especificamos las librerías necesarias en esta lista
packages = c("maps","ggmap","tidyverse","tmap","tmaptools")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE,repos='http://cran.rediris.es')
library(x, character.only = TRUE)
}
})
suppressPackageStartupMessages(library(ggmap))
suppressPackageStartupMessages(library(rgdal))
install.packages("rgdal")
## Global code options
knitr::opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
# Especificamos las librerías necesarias en esta lista
packages = c("maps","ggmap","tidyverse","tmap")
#packages = c("maps","ggmap","leaflet","rgdal","rgeos","maptools","tidyverse","tmap","formatR","tmaptools","devtools","caret")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE,repos='http://cran.rediris.es')
library(x, character.only = TRUE)
}
})
devtools::install_github("cwickham/geospatial")
install.packages("Rtools")
## Global code options
knitr::opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
# Especificamos las librerías necesarias en esta lista
packages = c("maps","ggmap","tidyverse","tmap","tmaptools","devtools")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE,repos='http://cran.rediris.es')
library(x, character.only = TRUE)
}
})
suppressPackageStartupMessages(library(ggmap))
suppressPackageStartupMessages(library(rgdal))
suppressPackageStartupMessages(library(rgeos))
suppressPackageStartupMessages(library(maptools))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(tmap))
#install.packages("devtools")
#devtools::install_github("cwickham/geospatial")
library(geospatial)
ward_sales <- geospatial::ward_sales
lon = -123.28
lat = 44.56
ampli <- 0.07
ventana <- c(lon - ampli,lat - ampli, lon + ampli, lat + ampli)
corvallis_map <- get_stamenmap(ventana,zoom = 12, maptype = 'terrain')
ggmpa(corvallis_map)
lon = -123.28
lat = 44.56
ampli <- 0.07
ventana <- c(lon - ampli,lat - ampli, lon + ampli, lat + ampli)
corvallis_map <- get_stamenmap(ventana,zoom = 12, maptype = 'terrain')
ggmap(corvallis_map)
lon = -123.28
lat = 44.56
ampli <- 0.07
ventana <- c(lon - ampli,lat - ampli, lon + ampli, lat + ampli)
corvallis_map <- get_stamenmap(ventana,zoom = 12, maptype = 'terrain')
ggmap(corvallis_map,base_layer = ggplot(ward_sales,aes(lon,lat)))+geom_point(color=ward)
lon = -123.28
lat = 44.56
ampli <- 0.07
ventana <- c(lon - ampli,lat - ampli, lon + ampli, lat + ampli)
corvallis_map <- get_stamenmap(ventana,zoom = 12, maptype = 'terrain')
ggmap(corvallis_map,base_layer = ggplot(data=ward_sales,aes(lon,lat)))+geom_point(color=ward)
View(ward_sales)
lon = -123.28
lat = 44.56
ampli <- 0.07
ventana <- c(lon - ampli,lat - ampli, lon + ampli, lat + ampli)
corvallis_map <- get_stamenmap(ventana,zoom = 12, maptype = 'terrain')
ggmap(corvallis_map,base_layer = ggplot(data=ward_sales,aes(lon,lat)))+geom_point(aes(color=ward))
head(preds,n=10)
ggplot(data=preds,aes(x=lon,y=lat))+geom_point()
ggplot(data=preds, aes(x=lon,y=lat))+geom_tile(aes(fill=predicted_price))
ggplot(data=preds, aes(x=lon,y=lat))+geom_raster(aes(fill=predicted_price))
ggmap(corvallis_map,base_layer = ggplot(data=preds,aes(lon,lat,fill=predicted_price)))+geom_tile(alpha = 0.8)
