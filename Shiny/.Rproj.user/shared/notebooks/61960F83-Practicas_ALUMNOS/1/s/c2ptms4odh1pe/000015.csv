"0","ui<- fluidPage(titlePanel(""Eventos""),"
"0","  fluidRow("
"0","      column(4,"
"0","        numericInput(""x"", ""Value"", 5),"
"0","        actionButton(""button"", ""Show"")"
"0","      ),"
"0","      column(8, tableOutput(""table""))"
"0","    )"
"0",")"
"0",""
"0","server<- function(input, output) {"
"0","      # ejecutar el cÃ³digo cada vez que detecta el evento."
"0","      # No hay reactividad por cambios en variables entre los {} "
"0","      observeEvent(input$button, {"
"0","        cat(""Showing"", input$x, ""rows\n"")"
"0","      })"
"0","      # Crea un valor reactivo basado en el evento, pero no"
"0","      # se recalcula cuando cambia algÃºn valor entre los {}"
"0","      df <- eventReactive(input$button, {"
"0","        head(cars, input$x)"
"0","      })"
"0","      output$table <- renderTable({"
"0","        df()"
"0","      })"
"0","}"
"0",""
"0","shinyApp(ui, server)"
"2","
Listening on http://127.0.0.1:7330
"
"1","Showing"
"1"," "
"1","6"
"1"," "
"1","rows
"
"1","Showing"
"1"," "
"1","6"
"1"," "
"1","rows
"
